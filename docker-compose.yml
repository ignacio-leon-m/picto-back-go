services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      # Map your local port 8080 to the container's port 8080
      - "8080:8080"
    volumes:
      # Mount your local source code into the container for live-reloading.
      # The ':cached' flag improves performance on macOS and Windows.
      - .:/app:cached
      # Use a named volume to persist the Go module cache between builds.
      - go-mod-cache:/go/pkg/mod
    environment:
      # Esta es la "Connection String" que nuestra aplicación Go usará para encontrar la base de datos.
      # 'db' es el nombre del servicio de PostgreSQL que definimos abajo. Docker se encarga de la resolución de red.
      - DATABASE_URL=postgres://postgres:vivigames77@db:5432/pictogramdb?sslmode=disable
    # Hacemos que el backend dependa de la base de datos.
    # Esto asegura que el contenedor de la 'db' se inicie antes que el del 'backend'.
    depends_on:
      - db

  db:
    image: postgres:16-alpine # Usamos una imagen oficial y ligera de PostgreSQL.
    ports:
      # Mapeamos el puerto 5432 del contenedor al 5432 de tu máquina local.
      # Esto te permitirá conectar herramientas de base de datos (como DBeaver o pgAdmin) directamente.
      - "5432:5432"
    volumes:
      # Montamos un volumen nombrado para persistir los datos de PostgreSQL.
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=vivigames77
      - POSTGRES_DB=pictogramdb

# Define the named volume for the Go module cache.
volumes:
  go-mod-cache:
  postgres-data: # Definimos el volumen para los datos de la base de datos.